# Copyright 2022 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.supervised.lr_schedules
import trax.models
import trax.optimizers
import trax.rl
import trax.rl.distributions
import trax.rl.normalization
import trax.rl_trainer

# Parameters for Policy:
# ==============================================================================
Policy.body = @trax.models.MLP
Policy.head_init_range = 0.01
Policy.normalizer = @trax.rl.normalization.Normalize

# Parameters for Value:
# ==============================================================================
Value.body = @trax.models.MLP
Value.normalizer = @trax.rl.normalization.Normalize

# Parameters for Normalize:
# ==============================================================================
Normalize.sample_limit = 30000
Normalize.epsilon = 1e-5

# Parameters for MLP:
# ==============================================================================
MLP.flatten = False
MLP.layer_widths = (64,)
MLP.out_activation = True

batch_size = 32
train_steps = 200
policy_train_steps = %train_steps
value_train_steps = %train_steps
policy_lr = 0.01
value_lr = 0.01
added_policy_slice_length = 1
q_value_n_samples = 4

# Parameters for Adam:
# ==============================================================================
Adam.weight_decay_rate = 0.0

# Parameters for multifactor:
# ==============================================================================
policy/multifactor.constant = %policy_lr
policy/multifactor.factors = 'constant'
value/multifactor.constant = %value_lr
value/multifactor.factors = 'constant'

# Parameters for RLTask:
# ==============================================================================
RLTask.env = "CartPole-v0"
RLTask.initial_trajectories = 1000
RLTask.gamma = 0.99
RLTask.max_steps = 200

# Parameters for td_lambda:
# ==============================================================================
td_lambda.lambda_ = 0.95

# Parameters for PolicyGradient:
# ==============================================================================
PolicyGradient.model_fn = @trax.models.Policy
PolicyGradient.optimizer = @trax.optimizers.Adam
PolicyGradient.batch_size = 128
PolicyGradient.n_trajectories_per_epoch = 2
PolicyGradient.n_eval_episodes = 1

# Parameters for PPO:
# ==============================================================================
PPO.value_model = @trax.models.Value
PPO.value_optimizer = @trax.optimizers.Adam
PPO.value_batch_size = 32
PPO.value_train_steps_per_epoch = 10
PPO.value_lr_schedule = @value/multifactor
PPO.value_evals_per_epoch = 1
PPO.value_eval_steps = 1
PPO.policy_model = @trax.models.Policy
PPO.policy_optimizer = @trax.optimizers.Adam
PPO.policy_batch_size = 32
PPO.policy_train_steps_per_epoch = 10
PPO.policy_lr_schedule = @policy/multifactor
PPO.policy_evals_per_epoch = 1
PPO.policy_eval_steps = 1
PPO.advantage_estimator = @trax.rl.advantages.td_lambda
PPO.n_trajectories_per_epoch = 50

# Parameters for td_lambda:
# ==============================================================================
td_lambda.lambda_ = 0.95

# Parameters for AWR:
# ==============================================================================
AWR.value_model = @trax.models.Value
AWR.value_optimizer = @trax.optimizers.Adam
AWR.value_batch_size = %batch_size
AWR.value_train_steps_per_epoch = %value_train_steps
AWR.value_lr_schedule = @value/multifactor
AWR.value_evals_per_epoch = 1
AWR.value_eval_steps = 10
AWR.policy_model = @trax.models.Policy
AWR.policy_optimizer = @trax.optimizers.Adam
AWR.policy_batch_size = %batch_size
AWR.policy_train_steps_per_epoch = %policy_train_steps
AWR.policy_lr_schedule = @policy/multifactor
AWR.policy_evals_per_epoch = 1
AWR.policy_eval_steps = 10
AWR.n_trajectories_per_epoch = None
AWR.n_interactions_per_epoch = 1000
AWR.n_eval_episodes = 1
AWR.eval_steps = [200, 1000]
AWR.advantage_estimator = @trax.rl.advantages.td_lambda
AWR.beta = 1.0
AWR.w_max = 20
AWR.max_slice_length = 1
AWR.added_policy_slice_length = %added_policy_slice_length
AWR.n_replay_epochs = 50
AWR.scale_value_targets = True
AWR.n_shared_layers = 0
AWR.q_value = False
AWR.q_value_n_samples = %q_value_n_samples
AWR.q_value_aggregate = 'mean'

# Parameters for SamplingAWR:
# ==============================================================================
SamplingAWR.value_model = @trax.models.Value
SamplingAWR.value_optimizer = @trax.optimizers.Adam
SamplingAWR.value_batch_size = %batch_size
SamplingAWR.value_train_steps_per_epoch = %value_train_steps
SamplingAWR.value_lr_schedule = @value/multifactor
SamplingAWR.value_evals_per_epoch = 1
SamplingAWR.value_eval_steps = 10
SamplingAWR.policy_model = @trax.models.Policy
SamplingAWR.policy_optimizer = @trax.optimizers.Adam
SamplingAWR.policy_batch_size = %batch_size
SamplingAWR.policy_train_steps_per_epoch = %policy_train_steps
SamplingAWR.policy_lr_schedule = @policy/multifactor
SamplingAWR.policy_evals_per_epoch = 1
SamplingAWR.policy_eval_steps = 10
SamplingAWR.n_trajectories_per_epoch = None
SamplingAWR.n_interactions_per_epoch = 1000
SamplingAWR.n_eval_episodes = 1
SamplingAWR.eval_steps = [200, 1000]
SamplingAWR.advantage_estimator = @trax.rl.advantages.td_lambda
SamplingAWR.beta = 1.0
SamplingAWR.w_max = 20
SamplingAWR.max_slice_length = 1
SamplingAWR.added_policy_slice_length = %added_policy_slice_length
SamplingAWR.n_replay_epochs = 50
SamplingAWR.scale_value_targets = True
SamplingAWR.n_shared_layers = 0
SamplingAWR.q_value_n_samples = %q_value_n_samples
SamplingAWR.q_value_aggregate = 'mean'
SamplingAWR.reweight = False

# Parameters for train_rl:
# ==============================================================================
train_rl.light_rl = True
train_rl.light_rl_trainer = @trax.rl.PolicyGradient
train_rl.n_epochs = 200
