# Copyright 2019 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.models
import trax.optimizers
import trax.supervised.inputs
import trax.supervised.trainer_lib

# Parameters that will vary between experiments:
# ==============================================================================
train.model = @trax.models.ReformerShortenLM
attn_type = @LSHCausalAttention
share_qk = True  # Required when using LSHCausalAttention
attn_kv = 64
n_layers = 6

# MemoryEfficientCausalAttention: full attention
# (no hparams to vary between experiments)

# TimeBinCausalAttention: attend to nearby items
TimeBinCausalAttention.n_bins = 64

# LSHCausalAttention: locality-sensitive hashing (LSH) attention
LSHCausalAttention.n_bins = 32  # 96
LSHCausalAttention.n_buckets = 64  # 192  # Always 2 * n_bins
LSHCausalAttention.n_hashes = 2
LSHCausalAttention.drop_for_hash_rate = 0.0

# Parameters for batch_fn:
# ==============================================================================
batch_fn.batch_size_per_device = 1
batch_fn.eval_batch_size = 8
batch_fn.max_eval_length = 12288  # 64 * 64 * 3

# Parameters for inputs:
# ==============================================================================
inputs.data_dir = None
inputs.dataset_name = 't2t_image_imagenet64_gen_flat_rev'
inputs.input_name = 'targets'

# Parameters for MultifactorSchedule:
# ==============================================================================
# 0.03125 ~= 1024^-0.5 = d_model^-0.5
MultifactorSchedule.constant = 0.03125
MultifactorSchedule.factors = 'constant * linear_warmup * rsqrt_decay'
MultifactorSchedule.warmup_steps = 8000

# Parameters for Adam:
# ==============================================================================
Adam.weight_decay_rate=0.0
Adam.b1 = 0.9
Adam.b2 = 0.98
Adam.eps = 1e-9

# Parameters for train:
# ==============================================================================
train.eval_frequency = 500
train.eval_steps = 64
train.inputs = @trax.supervised.inputs.inputs
# train.model: see top
train.optimizer = @trax.optimizers.Adam
train.train_steps = 500000
train.save_graphs = False
train.save_steps = \
    [1000, 5000, 10000, 20000, 40000, 60000, 80000,
     100000, 200000, 300000, 400000, 500000]

# Parameters for MemoryEfficientCausalAttention:
# ==============================================================================
MemoryEfficientCausalAttention.dropout = 0.0
MemoryEfficientCausalAttention.loop_stride = 512
MemoryEfficientCausalAttention.share_qk = %share_qk

# Parameters for TimeBinCausalAttention:
# ==============================================================================
TimeBinCausalAttention.dropout = 0.0
# TimeBinCausalAttention.n_bins: see top
TimeBinCausalAttention.share_qk = %share_qk

# Parameters for LSHCausalAttention:
# ==============================================================================
LSHCausalAttention.allow_duplicate_attention = False
LSHCausalAttention.attend_across_buckets = True
LSHCausalAttention.rehash_each_round = True
LSHCausalAttention.data_rotation = True
LSHCausalAttention.data_rotation_farthest = True
LSHCausalAttention.data_rotation_farthest_num = 8
# LSHCausalAttention.n_bins: see top
# LSHCausalAttention.n_buckets: see top
# LSHCausalAttention.n_hashes: see top
LSHCausalAttention.one_rng = False
LSHCausalAttention.hard_k = 0
LSHCausalAttention.dropout = 0.0
# LSHCausalAttention.drop_for_hash_rate: see top

# Parameters for TransformerLM:
# ==============================================================================
TransformerLM.attention_type = %attn_type
TransformerLM.d_attention_key = %attn_kv
TransformerLM.d_attention_value = %attn_kv
TransformerLM.d_model = 1024
TransformerLM.d_ff = 4096
TransformerLM.dropout = 0.0
TransformerLM.max_len = 12288  # 64 * 64 * 3
TransformerLM.mode = 'train'
TransformerLM.n_heads = 8
TransformerLM.n_layers = %n_layers
TransformerLM.share_qk = %share_qk
TransformerLM.vocab_size = 256

# Parameters for ReformerLM:
# ==============================================================================
ReformerLM.attention_type = %attn_type
ReformerLM.d_attention_key = %attn_kv
ReformerLM.d_attention_value = %attn_kv
ReformerLM.d_model = 1024
ReformerLM.d_ff = 4096
ReformerLM.dropout = 0.0
ReformerLM.max_len = 12288  # 64 * 64 * 3
ReformerLM.mode = 'train'
ReformerLM.n_heads = 8
ReformerLM.n_layers = %n_layers
ReformerLM.vocab_size = 256
ReformerLM.share_qk = %share_qk
ReformerLM.axial_pos_shape = (64, 64, 3)
ReformerLM.d_axial_pos_embs= (384, 384, 256)

# Parameters for ReformerShortenLM:
# ==============================================================================
ReformerShortenLM.attention_type = %attn_type
ReformerShortenLM.d_attention_key = %attn_kv
ReformerShortenLM.d_attention_value = %attn_kv
ReformerShortenLM.shorten_factor = 3
ReformerShortenLM.d_embedding = 256
ReformerShortenLM.d_model = 1024
ReformerShortenLM.d_ff = 4096
ReformerShortenLM.dropout = 0.0
ReformerShortenLM.max_len = 12288  # 64 * 64 * 3
ReformerShortenLM.mode = 'train'
ReformerShortenLM.n_heads = 8
ReformerShortenLM.n_layers = %n_layers
ReformerShortenLM.vocab_size = 256
ReformerShortenLM.share_qk = %share_qk
ReformerShortenLM.axial_pos_shape = (64, 64, 3)
ReformerShortenLM.d_axial_pos_embs= (96, 96, 64)
