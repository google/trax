# Copyright 2019 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.learning_rate
import trax.models
import trax.optimizers
import trax.supervised.inputs
import trax.supervised.trainer_lib

# Parameters for batch_fn:
# ==============================================================================
batch_fn.batch_size_per_device = 256
batch_fn.bucket_length = 32
batch_fn.buckets = None
batch_fn.eval_batch_size = 512

# Parameters for inputs:
# ==============================================================================
inputs.data_dir = None
inputs.dataset_name = 'cifar10'

# Parameters for MultifactorSchedule:
# ==============================================================================
EvalAdjustingSchedule.constant = 0.5
MultifactorSchedule.factors = 'constant * linear_warmup'
MultifactorSchedule.warmup_steps = 400

# Parameters for Momentum:
# ==============================================================================
Momentum.mass = 0.9
Momentum.weight_decay_rate = 5e-4

# Parameters for preprocess_fun:
# ==============================================================================
shuffle_and_batch_data.preprocess_fun=@trax.supervised.inputs.cifar10_augmentation_preprocess

# Parameters for WideResnet:
# ==============================================================================
WideResnet.widen_factor = 10
WideResnet.n_blocks = 4
WideResnet.n_output_classes = 10

# Parameters for train:
# ==============================================================================
train.eval_frequency = 100
train.eval_steps = 10
train.inputs = @trax.supervised.inputs.inputs
train.model = @trax.models.WideResnet
train.optimizer = @trax.optimizers.Momentum
train.train_steps = 10000
train.lr_schedule = @learning_rate.EvalAdjustingSchedule

# ==============================================================================
# Parameters for the RL hyperparameter tuner; turn on with
# train.lr_schedule=@learning_rate.PolicySchedule and set
# PolicySchedule.policy_dir.
# ==============================================================================

# Parameters for PolicySchedule:
# ==============================================================================
PolicySchedule.observation_metrics = (
    ("train", "metrics/accuracy"),
    ("train", "metrics/loss"),
    ("eval", "metrics/accuracy"),
    ("eval", "metrics/loss"),
)
PolicySchedule.include_controls_in_observation = False
PolicySchedule.control_configs = (
    ("learning_rate", 0.1, (1e-9, 10.0), False),
    ("weight_decay_rate", 1e-5, (1e-9, 0.1), False),
    ("mass", 0.9, (0.0, 0.99), True),
)
PolicySchedule.observation_range = (0.0, 10.0)
PolicySchedule.action_multipliers = (0.5, 0.8, 0.95, 1.0, 1.05, 1.25, 2.0)
PolicySchedule.policy_and_value_model = @trax.models.TransformerDecoder
PolicySchedule.policy_and_value_two_towers = False

# Parameters for TransformerDecoder:
# ==============================================================================
TransformerDecoder.d_model = 64
TransformerDecoder.d_ff = 128
TransformerDecoder.dropout = 0.0
TransformerDecoder.n_heads = 2
TransformerDecoder.n_layers = 2
