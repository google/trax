# Copyright 2022 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.data
import trax.models
import trax.optimizers
import trax.supervised.trainer_lib

include 'c4_trax_data.gin'

ff_chunk_size = 512  # Decreasing can increase possible batch_size.

enc_attn_type = @Attention

MultiplicativeModularCausalAttention.sparsity = 16
MultiplicativeConvCausalAttention.sparsity = 16
MultiplicativeConvCausalAttention.length_kernel_size = 3

dec_attn_type = @MultiplicativeConvCausalAttention

ff_sparsity = 64
loss_sparsity = 4

d_model = 1024
d_ff = 6144
n_heads = 16
n_layers = 24
attn_kv = 64
dropout = 0.1

# Parameters for data.Batch:
# ==============================================================================
data.Batch.batch_size = 32  # On one 2x2, 8 chips, batch_size 4 per chip for 32.


# Parameters for multifactor:
# ==============================================================================
multifactor.constant = 1.0
multifactor.factors = 'constant * rsqrt_decay'
multifactor.warmup_steps = 10000

# Parameters for Adafactor:
# ==============================================================================
Adafactor.weight_decay_rate = 1e-5
Adafactor.weight_decay_n_steps = 100000
Adafactor.beta1 = 0.0
Adafactor.decay_rate = 0.8
Adafactor.clipping_threshold = 1.0
Adafactor.epsilon1 = 1e-16
Adafactor.epsilon2 = 0.001
Adafactor.factored = True
Adafactor.multiply_by_parameter_scale = True

# Parameters for train:
# ==============================================================================
train.eval_frequency = 1000
train.eval_steps = 10
train.model = @trax.models.ConfigurableTerraformer
train.steps = 524288
train.optimizer = @trax.optimizers.Adafactor
train.checkpoint_highest = 'accuracy'
train.checkpoint_lowest = 'loss'
train.permanent_checkpoint_frequency = 50000
train.use_memory_efficient_trainer = False
# train.loss_chunk_size = 512  # only applicable for memory efficient trainer
# CrossEntropyLossWithLogSoftmax is required for memory efficient trainer.
# train.loss_fn = @CrossEntropyLossWithLogSoftmax()

# Parameters for SelfAttention:
# ==============================================================================
SelfAttention.attention_dropout = %dropout
SelfAttention.chunk_len = None  # full attention

# Parameters for LSHSelfAttention:
# ==============================================================================
LSHSelfAttention.attention_dropout = %dropout
LSHSelfAttention.chunk_len = 128
LSHSelfAttention.n_buckets = None
LSHSelfAttention.n_chunks_after = 0
LSHSelfAttention.n_chunks_before = 1
LSHSelfAttention.n_hashes = 2
LSHSelfAttention.n_parallel_heads = 1
LSHSelfAttention.predict_drop_len = %max_length
LSHSelfAttention.predict_mem_len = %max_length
# ConfigurableTerraformer's *encoder* is bidirectional.
encoder/LSHSelfAttention.n_chunks_after = 1

# Parameters for PureLSHSelfAttention:
# ==============================================================================
PureLSHSelfAttention.attention_dropout = 0.2
PureLSHSelfAttention.chunk_len = 128
PureLSHSelfAttention.n_buckets = None
PureLSHSelfAttention.n_chunks_after = 0
PureLSHSelfAttention.n_chunks_before = 1
PureLSHSelfAttention.n_hashes = 4
PureLSHSelfAttention.n_parallel_heads = 1
PureLSHSelfAttention.predict_drop_len = %max_length
PureLSHSelfAttention.predict_mem_len = %max_length
# ConfigurableTerraformer's *encoder* is bidirectional.
encoder/PureLSHSelfAttention.n_chunks_after = 1

# Parameters for PureLSHSelfAttentionWrapper:
# ==============================================================================
PureLSHSelfAttentionWrapper.pure_lsh_implementation = @PureLSHSelfAttention
PureLSHSelfAttentionWrapper.weights_format = 'sparse'
encoder/PureLSHSelfAttentionWrapper.pure_lsh_implementation = @encoder/PureLSHSelfAttention
encoder/PureLSHSelfAttentionWrapper.weights_format = 'model'


# Parameters for ConfigurableTerraformer:
# ==============================================================================
ConfigurableTerraformer.d_model = %d_model  # was  512
ConfigurableTerraformer.d_ff = %d_ff        # was 2048
ConfigurableTerraformer.dropout = %dropout  # was  0.1
ConfigurableTerraformer.ff_activation = @trax.layers.Relu
ConfigurableTerraformer.ff_dropout = 0.1
ConfigurableTerraformer.ff_chunk_size = %ff_chunk_size
ConfigurableTerraformer.ff_sparsity = %ff_sparsity
ConfigurableTerraformer.ff_use_sru = (1, 32)
ConfigurableTerraformer.max_len = 32768  # 32*1024
ConfigurableTerraformer.mode = 'train'
ConfigurableTerraformer.n_heads = %n_heads
ConfigurableTerraformer.n_encoder_layers = %n_layers
ConfigurableTerraformer.n_decoder_layers = %n_layers
ConfigurableTerraformer.input_vocab_size = %vocab_size
ConfigurableTerraformer.d_attention_key = %attn_kv    # d_model // n_heads
ConfigurableTerraformer.d_attention_value = %attn_kv  # d_model // n_heads
ConfigurableTerraformer.encoder_attention_type = %enc_attn_type
ConfigurableTerraformer.encoder_decoder_attention_type = %dec_attn_type
ConfigurableTerraformer.use_two_swaps_per_encoder_block = True
ConfigurableTerraformer.reversible_encoder = True
ConfigurableTerraformer.loss_sparsity = %loss_sparsity
ConfigurableTerraformer.n_layers_forget = 0
ConfigurableTerraformer.pos_type = None
ConfigurableTerraformer.attention_chunk_size = 0  # use 4 if it OOMs
ConfigurableTerraformer.use_bfloat16 = False

# Parameters for Transformer2:
# ==============================================================================
Transformer2.d_model = %d_model  # was  512
Transformer2.d_ff = %d_ff        # was 2048
Transformer2.dropout = %dropout  # was  0.1
Transformer2.dropout_shared_axes = [-2]
Transformer2.ff_activation = @trax.layers.Relu
Transformer2.ff_dropout = 0.1
Transformer2.ff_chunk_size = %ff_chunk_size
Transformer2.ff_sparsity = %ff_sparsity
Transformer2.ff_use_sru = (1, 32)
Transformer2.max_len = 32768  # 32*1024
Transformer2.mode = 'train'
Transformer2.n_heads = %n_heads
Transformer2.n_encoder_layers = %n_layers
Transformer2.n_decoder_layers = %n_layers
Transformer2.input_vocab_size = %vocab_size
Transformer2.encoder_attention_type = %enc_attn_type
Transformer2.decoder_attention_type = %dec_attn_type
Transformer2.pos_type = None
Transformer2.attention_chunk_size = 0  # use 4 if it OOMs
