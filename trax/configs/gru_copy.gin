# Copyright 2019 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.models
import trax.optimizers
import trax.supervised.inputs
import trax.supervised.trainer_lib

n_symbols = 32
length = 16
batch = 512

# Parameters for inputs:
# ==============================================================================
inputs.data_dir = None
inputs.dataset_name = 'gru_copy'

# Parameters for sequence_copy_inputs:
# ==============================================================================
sequence_copy_inputs.vocab_size = %n_symbols
sequence_copy_inputs.batch_size = %batch
sequence_copy_inputs.train_lengths = [%length]
sequence_copy_inputs.eval_lengths = [%length]
sequence_copy_inputs.reverse = False

# Parameters for MultifactorSchedule:
# ==============================================================================
MultifactorSchedule.constant = 0.001
MultifactorSchedule.factors = 'constant * linear_warmup'
MultifactorSchedule.warmup_steps = 8000

# Parameters for train:
# ==============================================================================
train.eval_frequency = 1000
train.eval_steps = 10
train.inputs = @trax.supervised.inputs.sequence_copy_inputs
train.model = @trax.models.RNNLM
train.optimizer = @trax.optimizers.Adam
train.train_steps = 500000
train.has_weights = True

# Parameters for RNNLM:
# ==============================================================================
RNNLM.rnn_cell = @trax.layers.GRUCell
RNNLM.rnn_cell_d_state_multiplier = 1
RNNLM.d_model = 128
RNNLM.dropout = 0.1
RNNLM.n_layers = 2
RNNLM.vocab_size = %n_symbols
