# Copyright 2019 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import trax.models
import trax.optimizers
import trax.supervised.inputs
import trax.supervised.trainer_lib

n_symbols = 128
length = 4096
batch = 16

# Parameters for batch_fn:
# ==============================================================================
batch_fn.batch_size = %batch
batch_fn.eval_batch_size = %batch
batch_fn.max_eval_length = %length

# Parameters for inputs:
# ==============================================================================
inputs.data_dir = None
inputs.dataset_name = 'sequence_copy'

# Parameters for MultifactorSchedule:
# ==============================================================================
MultifactorSchedule.constant = 1.0
MultifactorSchedule.factors = 'constant * linear_warmup * rsqrt_decay'
MultifactorSchedule.warmup_steps = 8000

# Parameters for sequence_copy_inputs:
# ==============================================================================
sequence_copy_inputs.vocab_size = %n_symbols
sequence_copy_inputs.batch_size = %batch
sequence_copy_inputs.train_lengths = [%length]
sequence_copy_inputs.eval_lengths = [%length]
sequence_copy_inputs.reverse = False

# Parameters for train:
# ==============================================================================
train.eval_frequency = 500
train.eval_steps = 64
train.inputs = @trax.supervised.inputs.sequence_copy_inputs
train.model = @trax.models.TransformerLM
train.optimizer = @trax.optimizers.Adafactor
train.train_steps = 50000
train.has_weights = True

# Parameters for MemoryEfficientCausalAttention:
# ==============================================================================
MemoryEfficientCausalAttention.dropout = 0.0
MemoryEfficientCausalAttention.loop_stride = 512

# Parameters for LSHCausalAttention:
# ==============================================================================
LSHCausalAttention.allow_duplicate_attention = False
LSHCausalAttention.attend_across_buckets = True
LSHCausalAttention.rehash_each_round = True
LSHCausalAttention.n_bins = 64
LSHCausalAttention.n_buckets = 128
LSHCausalAttention.n_hashes = 8
LSHCausalAttention.one_rng = False
LSHCausalAttention.hard_k = 0
LSHCausalAttention.dropout = 0.0
LSHCausalAttention.drop_for_hash_rate = 0.1
LSHCausalAttention.factorize_hash = True

# Parameters for TransformerLM:
# ==============================================================================
TransformerLM.attention_type = @trax.layers.LSHCausalAttention
TransformerLM.d_attention_key = 64
TransformerLM.d_attention_value = 64
TransformerLM.d_model = 256
TransformerLM.d_ff = 256
TransformerLM.dropout = 0.0
TransformerLM.max_len = %length
TransformerLM.mode = 'train'
TransformerLM.n_heads = 4
TransformerLM.n_layers = 1
TransformerLM.share_qk = True
TransformerLM.vocab_size = %n_symbols
