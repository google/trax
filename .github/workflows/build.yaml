# Copyright 2022 The Trax Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: build

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ '3.10' ]
        # Which tf-version run.
        tf-version: [ '2.14.0' ]
        # Which set of tests to run.
        trax-test: [ 'lib','research' ]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      - name: Set up Python ${{matrix.python-version}}
        uses: actions/setup-python@v3
        with:
          python-version: ${{matrix.python-version}}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -q -U setuptools numpy
          python -m pip install flake8 pytest
          python -m pip install orbax-checkpoint orbax-export
          python -m pip install tensorflow_datasets==4.2.0
          python -m pip install tensorflow_metadata==1.6.0
          python -m pip install tensorflow-text==2.11.0
          python -m pip install pandas==2.1.1
          python -m pip install matplotlib==3.8.0
          python -m pip install multimethod==1.10
          python -m pip install natsort==8.4.0
          python -m pip install omegaconf==2.3.0
          python -m pip install nltk==3.8.1
          python -m pip install pytest==7.4.2
          python -m pip install hydra-core==1.3.2
          python -m pip install scikit-learn==1.3.1
          python -m pip install pympler==1.0.1
          python -m pip install IPython==8.16.1
          python -m pip install mypy==1.5.1
          python -m pip install pylint==2.17.7
          python -m pip install black==23.9.1
          python -m pip install openpyxl==3.1.2
          python -m pip install numba==0.58.0
          python -m pip install parameterized==0.9.0
          python -m pip install mock==5.1.0
          python -m pip install tfds-nightly==4.6.0.dev202210050045
          python -m pip install editdistance==0.6.2
          python -m pip install pyglove==0.4.3
          python -m pip install sentencepiece==0.1.99
          python -m pip install babel==2.13.0
          python -m pip install rouge-score==0.1.2
          python -m pip install sacrebleu==2.3.1
          python -m pip install transformers==4.33.3
          python -m pip install mesh-tensorflow==0.1.21
          python -m pip install torch==2.0.1
          python -m pip install protobuf==3.19.6
          python -m pip install t5==0.9.2 --no-dependencies tensorflow
          python -m pip install seqio --no-deps tensorflow
          python -m pip install funcsigs==1.0.2
          python -m pip install absl-py==1.4.0
          python -m pip install gym==0.26.2
          python -m pip install gin-config==0.5.0
          python -m pip install jax==0.4.20
          python -m pip install jaxlib==0.4.20
          python -m pip install psutil==5.9.5
          python -m pip install scipy==1.11.3
          python -m pip install six==1.14.0
          python -m pip install attrs==23.1.0
          python -m pip install mock==5.1.0
          python -m pip install parameterized==0.9.0
          python -m pip install pylint==2.17.7
          python -m pip install pytest==7.4.2
          python -m pip install wrapt==1.15.0
          python -m pip install tensor2tensor==1.15.7
          python -m pip install clu==0.0.10
      # Test out right now with only testing one directory.
      - name: Test with pytest
        run: |
          TRAX_TEST="${{matrix.trax-test}}" ./oss_scripts/oss_tests.sh
      # The below step just reports the success or failure of tests as a "commit status".
      # This is needed for copy bara integration.
      - name: Report success or failure as github status
        if: always()
        shell: bash
        run: |
          status="${{ job.status }}"
          lowercase_status=$(echo $status | tr '[:upper:]' '[:lower:]')
          curl -sS --request POST \
          --url https://api.github.com/repos/${{github.repository}}/statuses/${{github.sha}} \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
              "state": "'$lowercase_status'",
              "target_url": "https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}",
              "description": "'$status'",
              "context": "github-actions/build"
              }'
